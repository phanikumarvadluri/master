1) Hello world (System.out.println("Hello")== done

Example :

Create a package com.arthimaticopeations
Create class ArthematicOperationDemo
run


package com.arthimaticopeations;

public class ArthematicOperationDemo {

    public static void main(String args[])
    {
        System.out.println("Helloooo");
    }
}



2) Java comments---
   single line comment===== //
   multiline comment======/* sldkjfdksjfksffjf*/
   Java doc comment-- used to explain what method or class is doing=======   /**   skfhskdhfsdh */

3) package---- just easy understand    Yes



DEMO:

public static void main(String args[])
    {
        System.out.println("Helo");
        System.out.println(7);
        System.out.println(10.7);
        System.out.println('F');
    }



4) Variables
   Primitive datatypes:  byte,short,int,long,float,double,char,boolean

   =================================

Data Type	Size	Description
byte	1 byte	Stores whole numbers from -128 to 127
short	2 bytes	Stores whole numbers from -32,768 to 32,767
int	4 bytes	Stores whole numbers from -2,147,483,648 to 2,147,483,647
long	8 bytes	Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
float	4 bytes	Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits
double	8 bytes	Stores fractional numbers. Sufficient for storing 15 decimal digits
boolean	1 bit	Stores true or false values
char	2 bytes	Stores a single character/letter or ASCII values

5) Arthmatic Operators:

double example:

package com.arthimaticopeations;


/**
 * +,-,*,/,%
 */
public class ArthematicOperationDemo {

    public static void main(String args[]) {

        double a=20d;
        double b=17d;

        System.out.println(a+b);//  37.0
        System.out.println(a-b);//  3.0
        System.out.println(a*b);// 340.0
        System.out.println(a/b);// 1.1764705882352942
        System.out.println(a%b);// 3.0

    }
}
============
float example:

    public class ArthematicOperationDemo {

        public static void main(String args[]) {

            float a=20f;
            float b=17f;

            System.out.println(a+b);//  37.0
            System.out.println(a-b);//  3.0
            System.out.println(a*b);// 340.0
            System.out.println(a/b);// 1.1764706
            System.out.println(a%b);// 3.0



        }
    }

    ====================
    int example :


     public class ArthematicOperationDemo {

            public static void main(String args[]) {

                int a=20;
                int b=17;

                System.out.println(a+b);//  37
                System.out.println(a-b);//  3
                System.out.println(a*b);// 340
                System.out.println(a/b);// 1
                System.out.println(a%b);// 3



            }
        }

  ==========================================================
  byte example:

   public class ArthematicOperationDemo {

          public static void main(String args[]) {

              byte a=17;
              byte b=20;

              System.out.println(a+b);//  37
              System.out.println(a-b);//  -3
              System.out.println(a*b);// 340
              System.out.println(a/b);// 0
              System.out.println(a%b);// 17



          }
      }
      ========================================


      same example with assiging to a variable:


      public class ArthematicOperationDemo {

          public static void main(String args[]) {

              int a = 17;
              int b = 20;

              int add = a + b;
              int sub = a - b;
              int mul = a * b;
              int div = a / b;
              int modulus = a % b;

              System.out.println(add);//  37
              System.out.println(sub);//  -3
              System.out.println(mul);// 340
              System.out.println(div);// 0
              System.out.println(modulus);// 17


          }
      }


      ===================


      Compound assignment operators:

      public class CompoundExample {
          public static void main(String[] args) {
              int a = 10;
              int b = 30;
              int res = a + b;
              System.out.println(res);
              //res = res + 10; //old style
              res+=10;
              System.out.println(res);
          }
      }

      =====================================


      public class CompoundExample {
          public static void main(String[] args) {
              int a = 10;
              int b = 30;
              int res = a - b;
              System.out.println(res);//-20
              //res = res - 67;
              res-=67;
              System.out.println(res);//-87
          }
      }

======================================================================


public class CompoundExample {
    public static void main(String[] args) {
        int a = 10;
        int b = 30;
        int res = a * b;
        System.out.println(res);//300
        //res = res * 2;
        res*=2;
        System.out.println(res);//600
    }
}
===================================================================================


nu) Post and pre

public class Other {

    public static void main(String[] args) {
        int a=10;
        System.out.println(++a);//11
        System.out.println(a);//11
    }
}


=========================================

public class PrefixandPostfix {

    /**
     * ++variable(pre increment operator)   vs variable++(post increment operator)
     *
     * @param args
     */
    public static void main(String[] args) {
        int a = 10;
        System.out.println(a++);//10
        System.out.println(a);//11
    }
}

Logical Operators:


public class LogicalOperators {

    public static void main(String[] args) {
        //  &&, ||
        /*
        &&
        =============
        TRUE && TRUE= TRUE
        TRUE && FALSE= FALSE
        FALSE && TRUE= FALSE
        FLASE && FALSE= FALSE
        ||
        TRUE || TRUE= TRUE
        TRUE || FALSE= TRUE
        FALSE || TRUE= TRUE
        FLASE || FALSE= FALSE
         */
        boolean a = true;
        boolean b= true;

        System.out.println(a&&b); // true
        System.out.println(a||b);//  true
    }
}

=======================================================================


Other example:

 public static void main(String[] args) {
        //  &&, ||
        /*
        &&
        =============
        TRUE && TRUE= TRUE
        TRUE && FALSE= FALSE
        FALSE && TRUE= FALSE
        FLASE && FALSE= FALSE
        ||
        TRUE || TRUE= TRUE
        TRUE || FALSE= TRUE
        FALSE || TRUE= TRUE
        FLASE || FALSE= FALSE
         */
        boolean a = false;
        boolean b = true;
        boolean c = false;
        System.out.println((a && b) || (a || c)); //    false  ---> (false  || false) ---false
        System.out.println((a || b) && (b && c));  //   false ----> (true && false)--- false

    }

    ====================================

    Relational Operators:


    public class RelationalOperators {

        public static void main(String[] args) {
            //> , >=, <,<=,==,!=
            int a = 12;
            int b = 10;
            System.out.println(a > b);
        }
    }


    ====================================
    if statement--(if else)

    public class IfelseExample {

        public static void main(String[] args)
        {
            boolean flag=true;
            if(flag)
            {
                System.out.println("flag value is true");
            }
            else{
                System.out.println("flag value is false");
            }
        }
    }
    =====================================================


    public class IfelseExample {

        public static void main(String[] args)
        {
            int a=20;
            int b=10;
            if(a>b)   //if(true)
            {
                System.out.println("a is big!");
            }
            else{
                System.out.println("b is big!");
            }
        }
    }


==========================================================================

public class IfelseExample {

    public static void main(String[] args) {
        int a = 30;
        int b = 20;
        int c = 10;

        if (a > b && a > c)  // if(true && true)--true
        {
            System.out.println("a is big");
        } else if (b > a && b > c) {
            System.out.println("b is big");
        } else {
            System.out.println("c is big!");
        }
    }
}
=======================================================

public class IfelseExample {

    public static void main(String[] args) {
       int number=-10;

       if(number>0)// false
       {
           System.out.println("Possitive number");
       }
       else if(number==0)  //false
       {
           System.out.println("Number is zero");
       }
       else{
           System.out.println("negative number");
       }
    }
}

=========================================================

Calengine Project:

public class Calengine {

    public static void main(String[] args) {

        double val1 = 10.9d;
        double val2 = 89.9d;
        char ops = 'd';
        double res = 0.0;

        if (ops == 'a') {  // false
            res = val1 + val2;
        }
        else if (ops == 's') { // false
            res = val1 - val2;
        }
        else if (ops == 'm') {// false
            res = val1 * val2;
        }
        else if (ops == 'd') {
            res = val1 / val2;   //res= 10.9/89.9d====
        }
        else if (ops == 'r') {
            res = val1 % val2;
        }
        System.out.println("Res " + res);

    }
}

==========================


Switch Statement:


public class CalengineWithCase {
    public static void main(String args[]) {
        double a = 23.0d;
        double b = 11.0d;
        char ops = 'z';
        double res = 0.0d;
        switch (ops) {
            case 'a':
                res = a + b;
                break;
            case 's':
                res = a - b;
                break;

            case 'm':
                res = a * b;
                break;

            case 'd':
                res = a / b;
                break;

            case 'r':
                res = a % b;
                break;

            default:
                System.out.println("Entered invalid ops code");
        }
        System.out.println(res);
    }
}
====================================================

For loop:


public class ForEachExample {

    public static void main(String args[]) {

        //for(inilize ; condition; increament)
        for (int j = 0; j <= 10000; j++) {
            System.out.println(j);
        }
    }
}
=========================================================


While Loop:


public class WhileLoop {

    public static void main(String[] args) {


        int res = 1;
        while (res <= 10) {
            System.out.println(res);
            res++;
        }
    }
}


==========================================

Dowhile:

public class DoWhile {

    public static void main(String[] args) {
        int res=1;
        do {
            System.out.println(res);
            res++;
        }
        while (res<10);
    }
}







